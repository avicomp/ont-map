@prefix rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix owl:   <http://www.w3.org/2002/07/owl#> .
@prefix spin:  <http://spinrdf.org/spin#> .
@prefix xsd:   <http://www.w3.org/2001/XMLSchema#> .
@prefix rdfs:  <http://www.w3.org/2000/01/rdf-schema#> .
@prefix spinmap: <http://spinrdf.org/spinmap#> .
@prefix spinmapl: <http://topbraid.org/spin/spinmapl#> .
@prefix sp:    <http://spinrdf.org/sp#> .
@prefix spl:   <http://spinrdf.org/spl#> .
@prefix avc:   <http://avc.ru/spin#> .

<http://avc.ru/spin>  a  owl:Ontology ;
        rdfs:comment     "This is an addition to the spin-family in order to customize spin-functions behaviour in GUI.\nAlso it contains several custom functions, which can be expressed through the other spin-library and SPARQL.\nCurrently it is assumed that this library is not going to be included as \"owl:import\" to the mappings produces by the API,\nand all listed custom  functions can be considered as templates." ;
        owl:versionIRI   avc:1.0 ;
        owl:versionInfo  "version 1.0" .

avc:hidden  a       owl:DatatypeProperty ;
        rdfs:range  xsd:string .

sp:abs  avc:hidden  "Duplicates the function fn:abs, which is preferable, since it has information about return types." .

spinmap:targetResource
        avc:hidden    "This function should not be allowed to be used explicitly by API.\nAll cases when spinmap:targetResource might be used, should be described through other functions." ;
        spin:private  true .

spinmapl:relatedSubjectContext
        avc:hidden  "Instead of explicit calling this function, please use ru.avicomp.map.Context#createRelatedContext(...) methods." .

spinmapl:relatedObjectContext
        avc:hidden  "Instead of explicit calling this function, please use ru.avicomp.map.Context#createRelatedContext(...) methods." .

sp:eq   avc:constraint  [ spl:predicate  sp:arg2 ;
                          spl:valueType  avc:undefined
                        ] ;
        avc:constraint  [ spl:predicate  sp:arg1 ;
                          spl:valueType  avc:undefined
                        ] .

avc:MagicFunctions
  rdf:type spin:Function ;
  spin:abstract "true"^^xsd:boolean ;
  rdfs:comment "A collection of functions that may not work as expected in Topbraid Composer." ;
  rdfs:label "Magic functions" ;
  rdfs:subClassOf spin:Functions ;
.
avc:groupConcatTest
  rdf:type spin:Function ;
  rdfs:comment "For developing" ;
  spin:returnType xsd:string ;
  avc:runtime "ru.avicomp.map.spin.AdjustGroupConcatImpl" ;
  spin:body [
      rdf:type sp:Select ;
      sp:resultVariables (
          [
            rdf:type sp:GroupConcat ;
            sp:distinct "true"^^xsd:boolean ;
            sp:expression [
                sp:varName "r" ;
              ] ;
            sp:separator " + " ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "r" ;
              ] ;
            sp:predicate spin:_arg1 ;
            sp:subject spin:_arg2 ;
          ]
        ) ;
    ] ;
  spin:constraint [
      rdf:type spl:Argument ;
      spl:optional "true"^^xsd:boolean ;
      spl:predicate sp:arg2 ;
      spl:valueType rdfs:Resource ;
      rdfs:comment "Subject (instance)" ;
    ] ;
  spin:constraint [
      rdf:type spl:Argument ;
      spl:predicate sp:arg1 ;
      spl:valueType rdf:Property ;
      rdfs:comment "Predicate (property)" ;
    ] ;
  spin:constraint [
      rdf:type spl:Argument ;
      spl:optional "true"^^xsd:boolean ;
      spl:predicate spinmapl:separator ;
      spl:defaultValue " + ";
      spl:valueType xsd:string ;
      rdfs:comment "The separator to put between the two values." ;
    ] ;
  rdfs:subClassOf spin:Functions ;
.

avc:getIRI
  rdf:type spin:Function ;
  rdfs:comment "For developing" ;
  spin:body [
      rdf:type sp:Select ;
      sp:resultVariables (
          [
            sp:varName "arg1" ;
          ]
        ) ;
      sp:where () ;
    ] ;
  spin:constraint [
      rdf:type spl:Argument ;
      spl:predicate sp:arg1 ;
      spl:valueType rdf:Property ;
      rdfs:comment "The property to return" ;
    ] ;
  spin:returnType rdf:Property ;
  rdfs:subClassOf spin:Functions ;
.

avc:get
  rdf:type spin:Function ;
  rdfs:comment "For developing" ;
  spin:body [
      rdf:type sp:Select ;
      sp:resultVariables (
          [
            sp:varName "r" ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:Bind ;
            sp:expression spin:_this ;
            sp:variable [
                sp:varName "r" ;
              ] ;
          ]
        ) ;
    ] ;
  spin:returnType rdfs:Resource ;
  rdfs:subClassOf avc:MagicFunctions ;
.

avc:withDefault  a          spin:Function ;
        rdfs:comment        "An ontology function for passing default values into a property mapping.\nIt is used for mapping data/annotation property assertion that absences in a particular source individual.\nLike spinmap:equals it returns the primary input property (?arg1) unchanged." ;
        rdfs:label          "With Default" ;
        rdfs:seeAlso        spinmap:equals ;
        rdfs:subClassOf     spl:OntologyFunctions ;
        spin:body           [ a                   sp:Select ;
                              sp:resultVariables  ( [ sp:varName  "arg1" ]
                                                  ) ;
                              sp:where            ()
                            ] ;
        spin:constraint     [ a              spl:Argument ;
                              rdfs:comment   "The property to get assertion value" ;
                              spl:predicate  sp:arg1 ;
                              spl:valueType  rdf:Property
                            ] ;
        spin:constraint     [ a              spl:Argument ;
                              rdfs:comment   "The default value to form a fake assertion on the source individual" ;
                              spl:predicate  sp:arg2 ;
                              spl:valueType  rdfs:Literal
                            ] ;
        spin:returnType     rdf:Property ;
        spinmap:shortLabel  "withDefault" .

avc:UUID  a                 spinmap:TargetFunction ;
        rdfs:comment        "A target function.\nGenerates an IRI from the UUID URN scheme based on source individual MD5 sum.\nEach call of AVC:UUID returns the same UUID IRI.\nExample: <urn:uuid:f3bf688d44e249fade9ca8ca23e29884>." ;
        rdfs:label          "MD5 UUID" ;
        rdfs:seeAlso        <https://www.w3.org/TR/sparql11-query/#func-uuid> , sp:UUID ;
        rdfs:subClassOf     spinmap:TargetFunctions ;
        spin:body           [ a                   sp:Select ;
                              sp:resultVariables  ( [ sp:expression  [ a        sp:iri ;
                                                                       sp:arg1  [ sp:varName  "uri" ]
                                                                     ] ;
                                                      sp:varName     "result"
                                                    ]
                                                  ) ;
                              sp:where            ( [ a              sp:Bind ;
                                                      sp:expression  [ a        sp:md5 ;
                                                                       sp:arg1  [ a        sp:str ;
                                                                                  sp:arg1  [ sp:varName  "source" ]
                                                                                ]
                                                                     ] ;
                                                      sp:variable    [ sp:varName  "value" ]
                                                    ]
                                                    [ a              sp:Bind ;
                                                      sp:expression  [ a        sp:concat ;
                                                                       sp:arg1  "urn:uuid:" ;
                                                                       sp:arg2  [ sp:varName  "value" ]
                                                                     ] ;
                                                      sp:variable    [ sp:varName  "uri" ]
                                                    ]
                                                  )
                            ] ;
        spin:returnType     rdfs:Resource ;
        spinmap:shortLabel  "UUID" .
